name: release package

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

    - name: Extract tag name
      id: extract_tag
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        fi
    
    - name: Determine changeset type
      id: determine_changeset
      run: |
        if [[ "${{ env.TAG_NAME }}" == patch-* ]]; then
          echo "CHANGESET_TYPE=patch" >> $GITHUB_ENV
        elif [[ "${{ env.TAG_NAME }}" == minor-* ]]; then
          echo "CHANGESET_TYPE=minor" >> $GITHUB_ENV
        elif [[ "${{ env.TAG_NAME }}" == major-* ]]; then
          echo "CHANGESET_TYPE=major" >> $GITHUB_ENV
        else
          echo "CHANGESET_TYPE=custom" >> $GITHUB_ENV
        fi
    
    - name: Get commit messages
      id: get_commits
      run: |
        COMMIT=$(git log -1 --pretty=format:"%s")
        echo "COMMIT=${COMMIT}" >> $GITHUB_ENV

    - name: Display tag name
      run: echo "The tag name is ${{ env.TAG_NAME }}"

    - name: Display changeset type
      run: echo "The changeset type is ${{ env.CHANGESET_TYPE }}"

    - name: Create changeset, version packages, and publish
      if: ${{ env.CHANGESET_TYPE != '' && env.TAG_NAME != '' }}
      run: |
        echo "${{ env.COMMIT }}" | npx changeset add --summary
        npx changeset version --type ${{ env.CHANGESET_TYPE }}
        npx changeset publish

    